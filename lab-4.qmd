---
title: "Trust in Science and Medicine Analysis (2018)"
format: 
  dashboard:
    orientation: columns
    nav-buttons: [linkedin]
    linkedin: www.linkedin.com/in/alisa-krasilnikov
server: shiny
theme: Pulse
logo: images/CP_logo_alt_rev.svg
logo-alt: Green Cal Poly logo displaying learn by doing crest
---


```{r, echo=FALSE, message = FALSE}
#| label: library
#| context: setup

library(shiny)
library(shinydashboard)
library(readxl)
library(tidyverse)
library(ggrepel)
library(leaflet)
library(rnaturalearth)
library(plotly)
library(kableExtra)
library(bslib)
library(scales)
```

```{r}
#| context: setup

country_data <- read.csv(here::here("cleaned_dataset.csv"), header = TRUE)
world <- ne_countries(scale = "medium", returnclass = "sf")

```

```{r}
#| context: setup

country_data_map <- world |>
  left_join(country_data, by = c("name" = "Country")) |> 
  filter(name != "Antarctica") |> 
  rename(Country = "name")
```

```{r}
#| context: setup
country_data_map <- country_data_map |> 
   mutate(New_region = case_when(
    Region %in% c("Eastern Africa", "Central Africa", "North Africa", "Southern Africa", "Western Africa") ~ "Africa",
    Region %in% c("Central America and Mexico", "Northern America", "South America") ~ "Americas",
    Region %in% c("Central Asia", "East Asia", "Southeast Asia", "South Asia") ~ "Asia",
    Region %in% c("Middle East") ~ "Middle East",
    Region %in% c("Eastern Europe", "Northern Europe", "Southern Europe", "Western Europe") ~ "Europe",
    Region == "Aus/NZ" ~ "Oceania",
    is.na(Region) ~ "Other",
    TRUE ~ "Other"
  ))

country_data <- country_data |> 
   mutate(New_region = case_when(
    Region %in% c("Eastern Africa", "Central Africa", "North Africa", "Southern Africa", "Western Africa") ~ "Africa",
    Region %in% c("Central America and Mexico", "Northern America", "South America") ~ "Americas",
    Region %in% c("Central Asia", "East Asia", "Southeast Asia", "South Asia") ~ "Asia",
    Region %in% c("Middle East") ~ "Middle East",
    Region %in% c("Eastern Europe", "Northern Europe", "Southern Europe", "Western Europe") ~ "Europe",
    Region == "Aus/NZ" ~ "Oceania",
    is.na(Region) ~ "Other",
    TRUE ~ "Other"
  ))
```


# {.sidebar}

```{r}
checkboxGroupInput('region', 'Select Regions:',
                   choices = sort(unique(country_data$New_region)),
                   selected = sort(unique(country_data$New_region)))

br()

sliderInput('age_range', 'Select Expected Life Expectancy Range:', 
             min=50, max=100,
             value= c(50, 100), 
             step=5)

br()

sliderInput('science_index', 'Select Trust in Science Index Range:', 
             min=1, max=4,
             value= c(1, 4), 
             step=1)
```

# Plots

## Column - Trust in Science 

### Row - Trust in Science Display {height="70%"}
```{r}
leafletOutput("map", height = "1000vh")
```

```{r, echo=FALSE}
#| title: "Map Display of Trust in Science"
#| context: server

filtered_countries_map <- reactive({
    country_data_map[country_data_map$New_region %in% input$region &
    (is.na(country_data_map$avg_trust) |
     (country_data_map$avg_trust >= input$science_index[1] &
      country_data_map$avg_trust <= input$science_index[2])),
  ]
})

output$map <- renderLeaflet({
  
  pal <- colorNumeric(
    palette = "magma",
    domain = c(1, 4),
    reverse = TRUE,
    na.color = "grey"
  )
 
  
  leaflet(data = filtered_countries_map()) |> 
    addTiles() |> 
    addPolygons(
      fillColor = ~pal(avg_trust),
      color = "white",
      weight = 0.5,
      fillOpacity = 0.8,
      popup = ~paste0(
        "<b>", Country, "</b><br>",
        "High Trust: ", round(prop_high_trust, 2), "%<br>",
        "Medium Trust: ", round(prop_med_trust, 2), "%<br>",
        "Low Trust: ", round(prop_low_trust, 2), "%<br>",
        "No Opinion: ", round(prop_no_opinion, 2), "%<br>",
        "Avg Science Trust Index: ", round(avg_trust, 2)
      ),
      label = ~paste(Country, "Average Trust in Science Index: ", round(avg_trust, 2))
    ) |> 
    addLegend(pal = pal, values = c(1, 4), title = "Average Trust in Science Index") |> 
    setView(lng = 0, lat = 50, zoom = 1.4)
})
```

### Row - Index Descriptors {.tabset .tabset-fade}

#### Trust in Science Index
This metric aggregates public responses to questions about trust in science and scientists. Individuals sampled within countries received a trust score between **1 (low trust)** and **4 (high trust)**. The colors on the map will indicate the **average** trust in science score for the country.

#### Trust in Medical Professionals
This metric shows the proportion of people in each country who self-reported trusting medical professionals, including doctors and nurses. A **higher percentage** indicates **greater** public confidence in healthcare providers, while a **lower percentage** reflects **less** trust.


## Column - Trust in Medicine

### Row - Trust in Medicine Display {height="75%"}

```{r}
plotlyOutput("plot")
```

```{r, echo=FALSE}
#| context: server

filtered_countries_nomap <- reactive({
  country_data[
    country_data$New_region %in% input$region &
    country_data$X2018 >= input$age_range[1] &
    country_data$X2018 <= input$age_range[2],
  ]
})

output$plot <- renderPlotly({ 
  plot <- plot_ly(
    data = filtered_countries_nomap(),
    x = ~X2018,
    y = ~prop_trust_medic,
    type = 'scatter',
    mode = 'markers',
    text = ~paste(
      "Country: ", Country, "<br>",
      "Percentage of Trust in Doctors and Nurses: ", round(prop_trust_medic * 100, 1), "%<br>",
      "Life Expectancy: ", round(X2018, 0), "years"
    ),
    hoverinfo = 'text',
    marker = list(size = 10,
                  color = '#8b008b')
  )
  
  plot <- layout(
    plot,
    title = list(
      text = "Percentage of trust in medical professionals \nby life expectancy",
      font = list(size = 20),
      x = 0.07,
      xanchor = "left"
    ),
    margin = list(t = 100),
    xaxis = list(
      title = "Life Expectancy at Birth (2018)",
      dtick = 10
    ),
    yaxis = list(
      tickformat = ',.0%',
      title = ""
    )
  )
  
  plot
})
```

##### Row - Value Boxes {height="25%"}

```{r}
uiOutput("scienceBox")
```

```{r, echo = FALSE}
#| context: server

 overall_mean <- reactive({
   country_data[country_data$New_region %in% input$region, ] |>
     summarize(mean_trust = mean(prop_trust_medic, na.rm = TRUE) * 100) |>
     mutate(mean_trust = round(mean_trust, 0))
 })

 overall_science_mean <- reactive({
   country_data[country_data$New_region %in% input$region, ] |>
     summarize(mean_sci_trust = mean(avg_trust, na.rm = TRUE)) |>
     mutate(mean_sci_trust = round(mean_sci_trust, 2))
 })
```

```{r}
#| context: server

output$scienceBox <- renderUI({
  bslib::value_box(
    title = "Overall Average Science Trust Index",
    value = overall_science_mean()$mean_sci_trust,
    theme = "purple" 
  )
})
```

```{r}
uiOutput("medValueBox")
```

```{r}
#| context: server

output$medValueBox <-  renderUI({
  bslib::value_box(
    title = "Overall Average Medical Trust",
    value = paste(overall_mean()$mean_trust, "%"),
    theme = "pink" 
  )
 })
```
# Data

### Column {.tabset}

```{r}
#| title: Trust in Science
#| context: setup

country_data |>
  drop_na() |> 
  mutate(
    "Percent High Trust" = scales::percent(prop_high_trust / 100, accuracy = 0.1),
    "Percent Medium Trust" = scales::percent(prop_med_trust / 100, accuracy = 0.1),
    "Percent Low Trust" = scales::percent(prop_low_trust / 100, accuracy = 0.1),
    "Percent No Opinion" = scales::percent(prop_no_opinion / 100, accuracy = 0.1),
    "Avg Science Trust Index" = round(avg_trust, 2)
  ) |> 
  select(Country, 
         `Percent High Trust`, 
         `Percent Medium Trust`, 
         `Percent Low Trust`, 
         `Percent No Opinion`, 
         `Avg Science Trust Index`) |>
  kbl() |> 
  kable_material(c("striped", "hover")) |> 
  scroll_box()
```


```{r}
#| title: Trust in Medical Professionals (Doctors and Nurses)
#| context: setup

country_data |>
  filter(!is.na(prop_trust_medic), 
         !is.na(`X2018`)) |> 
  mutate(
    "Proportion of Trust" = scales::percent(prop_trust_medic, accuracy = 0.1),
    "Life Expectancy (2018)" = round(`X2018`, 0)
  ) |> 
  select(Country,
         `Proportion of Trust`, 
         `Life Expectancy (2018)`) |> 
  kbl() |> 
  kable_material(c("striped", "hover")) |> 
  scroll_box()

```